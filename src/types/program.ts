// src/types/program.ts

/**
 * Represents a single exercise within a program.
 * Matches the output structure of the generateExerciseProgram AI function.
 */
export interface ExerciseInProgram {
  id?: string; // Added optional ID for linking feedback
  title: string;
  description: string;
  frequency: string; // Still useful for overall program view, maybe not on card
  repetitions: string; // e.g., "3 sets of 12 repetitions"
  restTime?: string; // e.g., "60 seconds" - Added
  illustrationUrl?: string;
  requiredEquipment?: string[]; // Added from library item enrichment
}

/**
 * Represents a complete exercise program assigned to a patient.
 * Stored in the 'programmes' collection in Firestore.
 */
export interface Program {
  id?: string; // Firestore document ID
  id_kine: string;
  id_patient: string;
  objective: string; // Short-term objective for this specific program phase
  longTermObjective?: string; // Overall long-term goal for the patient
  difficultyLevel: 'beginner' | 'intermediate' | 'advanced';
  availableEquipment: string;
  duration: string;
  content: ExerciseInProgram[]; // The array of exercises generated by the AI
  createdAt: Date; // Timestamp when the program was created/assigned
  updatedAt?: Date; // Timestamp for updates (optional)
}

// Removed GenerateProgramInput type alias as it's defined and exported
// directly from the src/ai/flows/generate-exercise-program.ts file.

/**
 * Represents the feedback submitted by a patient after an exercise.
 * Stored in the 'feedbacks' collection in Firestore.
 */
export interface Feedback {
  id?: string; // Firestore document ID
  id_programme: string; // Link to the specific program
  id_exercise: string; // Link to the specific exercise within the program (using ExerciseInProgram.id or title) - Added
  id_patient: string; // Link to the patient who submitted
  id_kine: string; // Link to the kine overseeing the patient
  date: Date; // Timestamp when the feedback was submitted
  painLevel: number; // 0-10 scale
  difficultyLevel: number; // 0-10 scale (changed from fatigueLevel)
  comment?: string; // Optional free text comment
}
